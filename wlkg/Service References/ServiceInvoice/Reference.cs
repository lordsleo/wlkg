//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace wlkg.ServiceInvoice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageOfDataSetymujubN2", Namespace="http://schemas.datacontract.org/2004/07/YGSoft.IPort.wlkgbs.Contract")]
    [System.SerializableAttribute()]
    public partial class PackageOfDataSetymujubN2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataSet ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataSet Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageOfstring", Namespace="http://schemas.datacontract.org/2004/07/YGSoft.IPort.wlkgbs.Contract")]
    [System.SerializableAttribute()]
    public partial class PackageOfstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Package", Namespace="http://schemas.datacontract.org/2004/07/YGSoft.IPort.wlkgbs.Contract")]
    [System.SerializableAttribute()]
    public partial class Package : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ACCBILLE", Namespace="http://schemas.datacontract.org/2004/07/YGSoft.IPort.wlkgbs.Contract")]
    [System.SerializableAttribute()]
    public partial class ACCBILLE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BilldateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> BilltotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegationidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputmanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IportcompField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IportdeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accid {
            get {
                return this.AccidField;
            }
            set {
                if ((object.ReferenceEquals(this.AccidField, value) != true)) {
                    this.AccidField = value;
                    this.RaisePropertyChanged("Accid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Billdate {
            get {
                return this.BilldateField;
            }
            set {
                if ((object.ReferenceEquals(this.BilldateField, value) != true)) {
                    this.BilldateField = value;
                    this.RaisePropertyChanged("Billdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Billid {
            get {
                return this.BillidField;
            }
            set {
                if ((object.ReferenceEquals(this.BillidField, value) != true)) {
                    this.BillidField = value;
                    this.RaisePropertyChanged("Billid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Billno {
            get {
                return this.BillnoField;
            }
            set {
                if ((object.ReferenceEquals(this.BillnoField, value) != true)) {
                    this.BillnoField = value;
                    this.RaisePropertyChanged("Billno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Billtotal {
            get {
                return this.BilltotalField;
            }
            set {
                if ((this.BilltotalField.Equals(value) != true)) {
                    this.BilltotalField = value;
                    this.RaisePropertyChanged("Billtotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Delegationid {
            get {
                return this.DelegationidField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegationidField, value) != true)) {
                    this.DelegationidField = value;
                    this.RaisePropertyChanged("Delegationid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Inputdate {
            get {
                return this.InputdateField;
            }
            set {
                if ((object.ReferenceEquals(this.InputdateField, value) != true)) {
                    this.InputdateField = value;
                    this.RaisePropertyChanged("Inputdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Inputman {
            get {
                return this.InputmanField;
            }
            set {
                if ((object.ReferenceEquals(this.InputmanField, value) != true)) {
                    this.InputmanField = value;
                    this.RaisePropertyChanged("Inputman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iportcomp {
            get {
                return this.IportcompField;
            }
            set {
                if ((object.ReferenceEquals(this.IportcompField, value) != true)) {
                    this.IportcompField = value;
                    this.RaisePropertyChanged("Iportcomp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iportdept {
            get {
                return this.IportdeptField;
            }
            set {
                if ((object.ReferenceEquals(this.IportdeptField, value) != true)) {
                    this.IportdeptField = value;
                    this.RaisePropertyChanged("Iportdept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Payer {
            get {
                return this.PayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PayerField, value) != true)) {
                    this.PayerField = value;
                    this.RaisePropertyChanged("Payer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ACCPAYMENTE", Namespace="http://schemas.datacontract.org/2004/07/YGSoft.IPort.wlkgbs.Contract")]
    [System.SerializableAttribute()]
    public partial class ACCPAYMENTE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegationidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InputmanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IportcompField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IportdeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaydateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PaytotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accid {
            get {
                return this.AccidField;
            }
            set {
                if ((object.ReferenceEquals(this.AccidField, value) != true)) {
                    this.AccidField = value;
                    this.RaisePropertyChanged("Accid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Delegationid {
            get {
                return this.DelegationidField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegationidField, value) != true)) {
                    this.DelegationidField = value;
                    this.RaisePropertyChanged("Delegationid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagField, value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Inputdate {
            get {
                return this.InputdateField;
            }
            set {
                if ((object.ReferenceEquals(this.InputdateField, value) != true)) {
                    this.InputdateField = value;
                    this.RaisePropertyChanged("Inputdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Inputman {
            get {
                return this.InputmanField;
            }
            set {
                if ((object.ReferenceEquals(this.InputmanField, value) != true)) {
                    this.InputmanField = value;
                    this.RaisePropertyChanged("Inputman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iportcomp {
            get {
                return this.IportcompField;
            }
            set {
                if ((object.ReferenceEquals(this.IportcompField, value) != true)) {
                    this.IportcompField = value;
                    this.RaisePropertyChanged("Iportcomp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Iportdept {
            get {
                return this.IportdeptField;
            }
            set {
                if ((object.ReferenceEquals(this.IportdeptField, value) != true)) {
                    this.IportdeptField = value;
                    this.RaisePropertyChanged("Iportdept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Paydate {
            get {
                return this.PaydateField;
            }
            set {
                if ((object.ReferenceEquals(this.PaydateField, value) != true)) {
                    this.PaydateField = value;
                    this.RaisePropertyChanged("Paydate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Payid {
            get {
                return this.PayidField;
            }
            set {
                if ((object.ReferenceEquals(this.PayidField, value) != true)) {
                    this.PayidField = value;
                    this.RaisePropertyChanged("Payid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Paytotal {
            get {
                return this.PaytotalField;
            }
            set {
                if ((this.PaytotalField.Equals(value) != true)) {
                    this.PaytotalField = value;
                    this.RaisePropertyChanged("Paytotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/YGSoft.IPort.wlkgbs.Contract")]
    [System.SerializableAttribute()]
    public partial class PackageOfboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceInvoice.IInvoice")]
    public interface IInvoice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/GetDelegation", ReplyAction="http://tempuri.org/IInvoice/GetDelegationResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 GetDelegation(string cryptogram, string strFirm, string strFirmQuasi, string strTaxis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/GetDelegation", ReplyAction="http://tempuri.org/IInvoice/GetDelegationResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> GetDelegationAsync(string cryptogram, string strFirm, string strFirmQuasi, string strTaxis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/GetDelegationAll", ReplyAction="http://tempuri.org/IInvoice/GetDelegationAllResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 GetDelegationAll(string cryptogram, string strFirm, string strFirmQuasi, string strTaxis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/GetDelegationAll", ReplyAction="http://tempuri.org/IInvoice/GetDelegationAllResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> GetDelegationAllAsync(string cryptogram, string strFirm, string strFirmQuasi, string strTaxis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Query", ReplyAction="http://tempuri.org/IInvoice/QueryResponse")]
        wlkg.ServiceInvoice.PackageOfstring Query(string cryptogram, string strFirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Query", ReplyAction="http://tempuri.org/IInvoice/QueryResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfstring> QueryAsync(string cryptogram, string strFirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Query1", ReplyAction="http://tempuri.org/IInvoice/Query1Response")]
        wlkg.ServiceInvoice.PackageOfstring Query1(string cryptogram, string strFirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Query1", ReplyAction="http://tempuri.org/IInvoice/Query1Response")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfstring> Query1Async(string cryptogram, string strFirm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/QueryBill", ReplyAction="http://tempuri.org/IInvoice/QueryBillResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 QueryBill(string cryptogram, string strFilter, string strCompany, string strDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/QueryBill", ReplyAction="http://tempuri.org/IInvoice/QueryBillResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QueryBillAsync(string cryptogram, string strFilter, string strCompany, string strDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Querybaogan", ReplyAction="http://tempuri.org/IInvoice/QuerybaoganResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 Querybaogan(string cryptogram, string strFilter, string strCompany, string strDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Querybaogan", ReplyAction="http://tempuri.org/IInvoice/QuerybaoganResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QuerybaoganAsync(string cryptogram, string strFilter, string strCompany, string strDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Queryglht", ReplyAction="http://tempuri.org/IInvoice/QueryglhtResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 Queryglht(string cryptogram, string sQL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Queryglht", ReplyAction="http://tempuri.org/IInvoice/QueryglhtResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QueryglhtAsync(string cryptogram, string sQL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Querydaishou", ReplyAction="http://tempuri.org/IInvoice/QuerydaishouResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 Querydaishou(string cryptogram, string strFilter, string strCompany, string strDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/Querydaishou", ReplyAction="http://tempuri.org/IInvoice/QuerydaishouResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QuerydaishouAsync(string cryptogram, string strFilter, string strCompany, string strDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/QueryMoney", ReplyAction="http://tempuri.org/IInvoice/QueryMoneyResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 QueryMoney(string cryptogram, string strFilter, string strCompany, string strDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/QueryMoney", ReplyAction="http://tempuri.org/IInvoice/QueryMoneyResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QueryMoneyAsync(string cryptogram, string strFilter, string strCompany, string strDepartment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/QueryReBill", ReplyAction="http://tempuri.org/IInvoice/QueryReBillResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 QueryReBill(string cryptogram, string sQLString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/QueryReBill", ReplyAction="http://tempuri.org/IInvoice/QueryReBillResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QueryReBillAsync(string cryptogram, string sQLString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/RelationContract", ReplyAction="http://tempuri.org/IInvoice/RelationContractResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 RelationContract(string cryptogram, string flag, string ID, [System.ServiceModel.MessageParameterAttribute(Name="id")] string id1, string delegationno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/RelationContract", ReplyAction="http://tempuri.org/IInvoice/RelationContractResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> RelationContractAsync(string cryptogram, string flag, string ID, [System.ServiceModel.MessageParameterAttribute(Name="id")] string id1, string delegationno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/RunProcedure", ReplyAction="http://tempuri.org/IInvoice/RunProcedureResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 RunProcedure(string cryptogram, string count, string accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/RunProcedure", ReplyAction="http://tempuri.org/IInvoice/RunProcedureResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> RunProcedureAsync(string cryptogram, string count, string accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/RunProcedure1", ReplyAction="http://tempuri.org/IInvoice/RunProcedure1Response")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 RunProcedure1(string cryptogram, string count, string accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/RunProcedure1", ReplyAction="http://tempuri.org/IInvoice/RunProcedure1Response")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> RunProcedure1Async(string cryptogram, string count, string accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/RunProcedure2", ReplyAction="http://tempuri.org/IInvoice/RunProcedure2Response")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 RunProcedure2(string cryptogram, string delegation_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/RunProcedure2", ReplyAction="http://tempuri.org/IInvoice/RunProcedure2Response")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> RunProcedure2Async(string cryptogram, string delegation_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/UpdataData", ReplyAction="http://tempuri.org/IInvoice/UpdataDataResponse")]
        wlkg.ServiceInvoice.Package UpdataData(string cryptogram, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/UpdataData", ReplyAction="http://tempuri.org/IInvoice/UpdataDataResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> UpdataDataAsync(string cryptogram, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/UpdataContract", ReplyAction="http://tempuri.org/IInvoice/UpdataContractResponse")]
        wlkg.ServiceInvoice.Package UpdataContract(string cryptogram, string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/UpdataContract", ReplyAction="http://tempuri.org/IInvoice/UpdataContractResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> UpdataContractAsync(string cryptogram, string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/AppendAccBill", ReplyAction="http://tempuri.org/IInvoice/AppendAccBillResponse")]
        wlkg.ServiceInvoice.PackageOfstring AppendAccBill(string cryptogram, wlkg.ServiceInvoice.ACCBILLE bill, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/AppendAccBill", ReplyAction="http://tempuri.org/IInvoice/AppendAccBillResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfstring> AppendAccBillAsync(string cryptogram, wlkg.ServiceInvoice.ACCBILLE bill, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/AppendAccMoney", ReplyAction="http://tempuri.org/IInvoice/AppendAccMoneyResponse")]
        wlkg.ServiceInvoice.PackageOfstring AppendAccMoney(string cryptogram, wlkg.ServiceInvoice.ACCPAYMENTE money, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/AppendAccMoney", ReplyAction="http://tempuri.org/IInvoice/AppendAccMoneyResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfstring> AppendAccMoneyAsync(string cryptogram, wlkg.ServiceInvoice.ACCPAYMENTE money, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteAccBill", ReplyAction="http://tempuri.org/IInvoice/DeleteAccBillResponse")]
        wlkg.ServiceInvoice.Package DeleteAccBill(string cryptogram, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteAccBill", ReplyAction="http://tempuri.org/IInvoice/DeleteAccBillResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> DeleteAccBillAsync(string cryptogram, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteAccMoney", ReplyAction="http://tempuri.org/IInvoice/DeleteAccMoneyResponse")]
        wlkg.ServiceInvoice.Package DeleteAccMoney(string cryptogram, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteAccMoney", ReplyAction="http://tempuri.org/IInvoice/DeleteAccMoneyResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> DeleteAccMoneyAsync(string cryptogram, string strFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteBill", ReplyAction="http://tempuri.org/IInvoice/DeleteBillResponse")]
        wlkg.ServiceInvoice.Package DeleteBill(string cryptogram, string accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteBill", ReplyAction="http://tempuri.org/IInvoice/DeleteBillResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> DeleteBillAsync(string cryptogram, string accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteEntity", ReplyAction="http://tempuri.org/IInvoice/DeleteEntityResponse")]
        wlkg.ServiceInvoice.PackageOfboolean DeleteEntity(string cryptogram, string sQL1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/DeleteEntity", ReplyAction="http://tempuri.org/IInvoice/DeleteEntityResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfboolean> DeleteEntityAsync(string cryptogram, string sQL1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/InsertEntity", ReplyAction="http://tempuri.org/IInvoice/InsertEntityResponse")]
        wlkg.ServiceInvoice.PackageOfboolean InsertEntity(string cryptogram, string sQL2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/InsertEntity", ReplyAction="http://tempuri.org/IInvoice/InsertEntityResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfboolean> InsertEntityAsync(string cryptogram, string sQL2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/UpdateEntiey", ReplyAction="http://tempuri.org/IInvoice/UpdateEntieyResponse")]
        wlkg.ServiceInvoice.PackageOfboolean UpdateEntiey(string cryptogram, string sQL3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/UpdateEntiey", ReplyAction="http://tempuri.org/IInvoice/UpdateEntieyResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfboolean> UpdateEntieyAsync(string cryptogram, string sQL3);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/GetBaseData", ReplyAction="http://tempuri.org/IInvoice/GetBaseDataResponse")]
        wlkg.ServiceInvoice.PackageOfDataSetymujubN2 GetBaseData(string cryptogram, string iport_dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInvoice/GetBaseData", ReplyAction="http://tempuri.org/IInvoice/GetBaseDataResponse")]
        System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> GetBaseDataAsync(string cryptogram, string iport_dept);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInvoiceChannel : wlkg.ServiceInvoice.IInvoice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvoiceClient : System.ServiceModel.ClientBase<wlkg.ServiceInvoice.IInvoice>, wlkg.ServiceInvoice.IInvoice {
        
        public InvoiceClient() {
        }
        
        public InvoiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InvoiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 GetDelegation(string cryptogram, string strFirm, string strFirmQuasi, string strTaxis) {
            return base.Channel.GetDelegation(cryptogram, strFirm, strFirmQuasi, strTaxis);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> GetDelegationAsync(string cryptogram, string strFirm, string strFirmQuasi, string strTaxis) {
            return base.Channel.GetDelegationAsync(cryptogram, strFirm, strFirmQuasi, strTaxis);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 GetDelegationAll(string cryptogram, string strFirm, string strFirmQuasi, string strTaxis) {
            return base.Channel.GetDelegationAll(cryptogram, strFirm, strFirmQuasi, strTaxis);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> GetDelegationAllAsync(string cryptogram, string strFirm, string strFirmQuasi, string strTaxis) {
            return base.Channel.GetDelegationAllAsync(cryptogram, strFirm, strFirmQuasi, strTaxis);
        }
        
        public wlkg.ServiceInvoice.PackageOfstring Query(string cryptogram, string strFirm) {
            return base.Channel.Query(cryptogram, strFirm);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfstring> QueryAsync(string cryptogram, string strFirm) {
            return base.Channel.QueryAsync(cryptogram, strFirm);
        }
        
        public wlkg.ServiceInvoice.PackageOfstring Query1(string cryptogram, string strFirm) {
            return base.Channel.Query1(cryptogram, strFirm);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfstring> Query1Async(string cryptogram, string strFirm) {
            return base.Channel.Query1Async(cryptogram, strFirm);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 QueryBill(string cryptogram, string strFilter, string strCompany, string strDepartment) {
            return base.Channel.QueryBill(cryptogram, strFilter, strCompany, strDepartment);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QueryBillAsync(string cryptogram, string strFilter, string strCompany, string strDepartment) {
            return base.Channel.QueryBillAsync(cryptogram, strFilter, strCompany, strDepartment);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 Querybaogan(string cryptogram, string strFilter, string strCompany, string strDepartment) {
            return base.Channel.Querybaogan(cryptogram, strFilter, strCompany, strDepartment);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QuerybaoganAsync(string cryptogram, string strFilter, string strCompany, string strDepartment) {
            return base.Channel.QuerybaoganAsync(cryptogram, strFilter, strCompany, strDepartment);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 Queryglht(string cryptogram, string sQL) {
            return base.Channel.Queryglht(cryptogram, sQL);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QueryglhtAsync(string cryptogram, string sQL) {
            return base.Channel.QueryglhtAsync(cryptogram, sQL);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 Querydaishou(string cryptogram, string strFilter, string strCompany, string strDepartment) {
            return base.Channel.Querydaishou(cryptogram, strFilter, strCompany, strDepartment);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QuerydaishouAsync(string cryptogram, string strFilter, string strCompany, string strDepartment) {
            return base.Channel.QuerydaishouAsync(cryptogram, strFilter, strCompany, strDepartment);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 QueryMoney(string cryptogram, string strFilter, string strCompany, string strDepartment) {
            return base.Channel.QueryMoney(cryptogram, strFilter, strCompany, strDepartment);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QueryMoneyAsync(string cryptogram, string strFilter, string strCompany, string strDepartment) {
            return base.Channel.QueryMoneyAsync(cryptogram, strFilter, strCompany, strDepartment);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 QueryReBill(string cryptogram, string sQLString) {
            return base.Channel.QueryReBill(cryptogram, sQLString);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> QueryReBillAsync(string cryptogram, string sQLString) {
            return base.Channel.QueryReBillAsync(cryptogram, sQLString);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 RelationContract(string cryptogram, string flag, string ID, string id1, string delegationno) {
            return base.Channel.RelationContract(cryptogram, flag, ID, id1, delegationno);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> RelationContractAsync(string cryptogram, string flag, string ID, string id1, string delegationno) {
            return base.Channel.RelationContractAsync(cryptogram, flag, ID, id1, delegationno);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 RunProcedure(string cryptogram, string count, string accid) {
            return base.Channel.RunProcedure(cryptogram, count, accid);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> RunProcedureAsync(string cryptogram, string count, string accid) {
            return base.Channel.RunProcedureAsync(cryptogram, count, accid);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 RunProcedure1(string cryptogram, string count, string accid) {
            return base.Channel.RunProcedure1(cryptogram, count, accid);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> RunProcedure1Async(string cryptogram, string count, string accid) {
            return base.Channel.RunProcedure1Async(cryptogram, count, accid);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 RunProcedure2(string cryptogram, string delegation_id) {
            return base.Channel.RunProcedure2(cryptogram, delegation_id);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> RunProcedure2Async(string cryptogram, string delegation_id) {
            return base.Channel.RunProcedure2Async(cryptogram, delegation_id);
        }
        
        public wlkg.ServiceInvoice.Package UpdataData(string cryptogram, string strFilter) {
            return base.Channel.UpdataData(cryptogram, strFilter);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> UpdataDataAsync(string cryptogram, string strFilter) {
            return base.Channel.UpdataDataAsync(cryptogram, strFilter);
        }
        
        public wlkg.ServiceInvoice.Package UpdataContract(string cryptogram, string s) {
            return base.Channel.UpdataContract(cryptogram, s);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> UpdataContractAsync(string cryptogram, string s) {
            return base.Channel.UpdataContractAsync(cryptogram, s);
        }
        
        public wlkg.ServiceInvoice.PackageOfstring AppendAccBill(string cryptogram, wlkg.ServiceInvoice.ACCBILLE bill, string strFilter) {
            return base.Channel.AppendAccBill(cryptogram, bill, strFilter);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfstring> AppendAccBillAsync(string cryptogram, wlkg.ServiceInvoice.ACCBILLE bill, string strFilter) {
            return base.Channel.AppendAccBillAsync(cryptogram, bill, strFilter);
        }
        
        public wlkg.ServiceInvoice.PackageOfstring AppendAccMoney(string cryptogram, wlkg.ServiceInvoice.ACCPAYMENTE money, string strFilter) {
            return base.Channel.AppendAccMoney(cryptogram, money, strFilter);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfstring> AppendAccMoneyAsync(string cryptogram, wlkg.ServiceInvoice.ACCPAYMENTE money, string strFilter) {
            return base.Channel.AppendAccMoneyAsync(cryptogram, money, strFilter);
        }
        
        public wlkg.ServiceInvoice.Package DeleteAccBill(string cryptogram, string strFilter) {
            return base.Channel.DeleteAccBill(cryptogram, strFilter);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> DeleteAccBillAsync(string cryptogram, string strFilter) {
            return base.Channel.DeleteAccBillAsync(cryptogram, strFilter);
        }
        
        public wlkg.ServiceInvoice.Package DeleteAccMoney(string cryptogram, string strFilter) {
            return base.Channel.DeleteAccMoney(cryptogram, strFilter);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> DeleteAccMoneyAsync(string cryptogram, string strFilter) {
            return base.Channel.DeleteAccMoneyAsync(cryptogram, strFilter);
        }
        
        public wlkg.ServiceInvoice.Package DeleteBill(string cryptogram, string accid) {
            return base.Channel.DeleteBill(cryptogram, accid);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.Package> DeleteBillAsync(string cryptogram, string accid) {
            return base.Channel.DeleteBillAsync(cryptogram, accid);
        }
        
        public wlkg.ServiceInvoice.PackageOfboolean DeleteEntity(string cryptogram, string sQL1) {
            return base.Channel.DeleteEntity(cryptogram, sQL1);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfboolean> DeleteEntityAsync(string cryptogram, string sQL1) {
            return base.Channel.DeleteEntityAsync(cryptogram, sQL1);
        }
        
        public wlkg.ServiceInvoice.PackageOfboolean InsertEntity(string cryptogram, string sQL2) {
            return base.Channel.InsertEntity(cryptogram, sQL2);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfboolean> InsertEntityAsync(string cryptogram, string sQL2) {
            return base.Channel.InsertEntityAsync(cryptogram, sQL2);
        }
        
        public wlkg.ServiceInvoice.PackageOfboolean UpdateEntiey(string cryptogram, string sQL3) {
            return base.Channel.UpdateEntiey(cryptogram, sQL3);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfboolean> UpdateEntieyAsync(string cryptogram, string sQL3) {
            return base.Channel.UpdateEntieyAsync(cryptogram, sQL3);
        }
        
        public wlkg.ServiceInvoice.PackageOfDataSetymujubN2 GetBaseData(string cryptogram, string iport_dept) {
            return base.Channel.GetBaseData(cryptogram, iport_dept);
        }
        
        public System.Threading.Tasks.Task<wlkg.ServiceInvoice.PackageOfDataSetymujubN2> GetBaseDataAsync(string cryptogram, string iport_dept) {
            return base.Channel.GetBaseDataAsync(cryptogram, iport_dept);
        }
    }
}
